# sigma = LMA
# parameters = parameter list
# assign parameters within local function environment
list2env(parameter_list, envir = environment())
# soil conditions
temp <- 20 # deg C
moisture <- 0.05 # random soil moisture value
## Calculate traits derived from LMA
# leaf lifespan
lambda = c*sigma
# leaf N content
n = A + B*sigma
# leaf respiration
R = n*r
# SOM residence time
tau_s = decompose_soil(temp, moisture)*s*sigma
## Create list of leaf traits
leaf_traits <- tibble::lst(sigma, lambda, n, R, tau_s)
return(leaf_traits)
}
cycle_carbon <- function(leaf_traits, parameters, N_min) {
list2env(parameters, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - loss
carbon_balance <- list(gain, cost, net)
return(carbon_balance)
}
traits <- link_traits(0.05, p_list)
cycle_carbon(traits, p_list, 0.05)
cycle_carbon <- function(leaf_traits, parameters, N_min) {
list2env(parameters, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- list(gain, cost, net)
return(carbon_balance)
}
cycle_carbon(traits, p_list, 0.05)
carbon_balance <- tibble::lst(gain, cost, net)
cycle_carbon <- function(leaf_traits, parameters, N_min) {
list2env(parameters, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble::lst(gain, cost, net)
return(carbon_balance)
}
traits <- link_traits(0.05, p_list)
cycle_carbon(traits, p_list, 0.05)
cycle_carbon <- function(leaf_traits, parameters, N_min) {
list2env(parameters, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble::lst(L, gain, cost, net)
return(carbon_balance)
}
cycle_carbon <- function(leaf_traits, parameters, N_min) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
list2env(parameters, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble::lst(L, gain, cost, net)
return(carbon_balance)
}
traits <- link_traits(0.05, p_list)
cycle_carbon(traits, p_list, 0.05)
carbon_balance <- tibble(L, gain, cost, net)
carbon_balance <- tibble(L, gain, cost, net)
cycle_carbon <- function(leaf_traits, parameters, N_min) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
list2env(parameters, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(L, gain, cost, net)
return(carbon_balance)
}
cycle_carbon(traits, p_list, 0.05)
## Figure 1
lma <- seq(0,0.25, 0.01)
link_traits <- function(sigma, parameter_list) {
## INPUTS:
# sigma = LMA
# parameters = parameter list
# assign parameters within local function environment
list2env(parameter_list, envir = environment())
# soil conditions -- not explored, so set to 1
temp <- 1 # deg C
moisture <- 1 # random soil moisture value
## Calculate traits derived from LMA
# leaf lifespan
lambda = c*sigma
# leaf N content
n = A + B*sigma
# leaf respiration
R = n*r
# SOM residence time
tau_s = decompose_soil(temp, moisture)*s*sigma
## Create list of leaf traits
leaf_traits <- tibble::lst(sigma, lambda, n, R, tau_s)
return(leaf_traits)
}
cycle_carbon <- function(sigma, parameter_list, N_min) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameters)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(L, gain, cost, net)
return(carbon_balance)
}
cycle_carbon(0.05, p_list, 0.05)
cycle_carbon(0.02, p_list, 0.05)
## Figure 1
lma <- seq(0,0.25, 0.01)
?map, ...)
??map
?purrr
library(purrr)
?map2_dfc
lma
?map_dfr
?map2_dfr
cycle_carbon <- function(sigma, parameter_list = p_list, N_min = 0.05) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameters)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(L, gain, cost, net)
return(carbon_balance)
}
map_dfr(lma, cycle_carbon)
?map_dfr
map_dfr(lma = lma, cycle_carbon)
map_dfr(lma, cycle_carbon)
?broom
cycle_carbon <- function(sigma, parameter_list = p_list, N_min = 0.05) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameters)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, L, gain, cost, net)
return(carbon_balance)
}
## Figure 1
lma <- seq(0,0.25, 0.01)
map_dfr(lma, cycle_carbon)
carbon_balance <- map_dfr(lma, cycle_carbon)
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = L))
carbon_balance <- map_dfr(lma, cycle_carbon) %>%
pivot_longer(gain:net, name = carbon, values_to = flux)
carbon_balance <- map_dfr(lma, cycle_carbon) %>%
pivot_longer(gain:net, name = "carbon", values_to = flux)
carbon_balance <- map_dfr(lma, cycle_carbon) %>%
pivot_longer(gain:net, name = "carbon", values_to = "flux")
?pivot_longer
carbon_balance <- map_dfr(lma, cycle_carbon) %>%
pivot_longer(cols = gain:net, name = "carbon", values_to = "flux")
data <- carbon_balance %>%
pivot_longer(cols = gain:net, name = "carbon", values_to = "flux")
carbon_balance
data <- carbon_balance %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_balance <- map_dfr(lma, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_balance
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon))
# Read parameter file
param_file <- "parameters/default_species.p"
params <- read_csv(param_file)
p_list <- setNames(as.list(params$value), params$parameter) # list
decompose_soil <- function(temp, moisture) {
# not explored yet, so set to temp = 1, moisture = 1 below for a linear relationship
rate <- temp*moisture
return(rate)
}
link_traits <- function(sigma, parameter_list) {
## INPUTS:
# sigma = LMA
# parameters = parameter list
# assign parameters within local function environment
list2env(parameter_list, envir = environment())
# soil conditions -- not explored, so set to 1
temp <- 1 # deg C
moisture <- 1 # random soil moisture value
## Calculate traits derived from LMA
# leaf lifespan
lambda = c*sigma
# leaf N content
n = A + B*sigma
# leaf respiration
R = n*r
# SOM residence time
tau_s = decompose_soil(temp, moisture)*s*sigma
## Create list of leaf traits
leaf_traits <- tibble::lst(sigma, lambda, n, R, tau_s)
return(leaf_traits)
}
cycle_carbon <- function(sigma, parameter_list = p_list, N_min = 0.05) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameters)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, L, gain, cost, net)
return(carbon_balance)
}
# generate data
lma <- seq(0,0.25, 0.01)
carbon_balance <- map_dfr(lma, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon))
cycle_carbon <- function(sigma, parameter_list = p_list, N_min = 5) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameters)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, L, gain, cost, net)
return(carbon_balance)
}
# generate data
lma <- seq(0,0.25, 0.01)
carbon_balance <- map_dfr(lma, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon))
# generate data
lma <- seq(0,0.25, 0.01)
n_min <- seq(0, 5, 10)
carbon_balance <- map2_dfr(lma, n_min, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
cycle_carbon <- function(sigma, parameter_list = p_list, N_min) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameters)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, L, gain, cost, net)
return(carbon_balance)
}
n_min <- seq(0, 5, 10)
carbon_balance <- map2_dfr(lma, n_min, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
leaf_traits <- link_traits(sigma, parameter_list)
cycle_carbon <- function(sigma, parameter_list = p_list, N_min) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameter_list)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, L, gain, cost, net)
return(carbon_balance)
}
carbon_balance <- map2_dfr(lma, n_min, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_balance <- map2_dfr(lma, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
?map2_dfr
carbon_balance <- pmap_dfr(lma, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
cycle_carbon <- function(sigma, parameter_list = p_list, N_min = 5) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameter_list)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, L, gain, cost, net)
return(carbon_balance)
}
# generate data
lma <- seq(0,0.25, 0.01)
carbon_balance <- pmap_dfr(lma, cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_balance <- pmap_dfr(list(lma), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_Balance
carbon_balance
# generate data
lma <- seq(0,0.25, 0.01)
N_min <- seq(0, 25, 1)
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
cycle_carbon <- function(sigma, N_min, parameter_list = p_list) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameter_list)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, L, gain, cost, net)
return(carbon_balance)
}
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_balance
cycle_carbon <- function(sigma, N_min, parameter_list = p_list) {
##INPUT
##OUTPUT: list with the following
# L : leaf area index
# gain : carbon gain
# cost :carbon cost
# net : net carbon
leaf_traits <- link_traits(sigma, parameter_list)
list2env(parameter_list, envir = environment())
list2env(leaf_traits, envir = environment())
# leaf area
L = N_min*lambda/n
# carbon balance
gain = V/k * (1 - exp(-k*L))
cost = (R + G * sigma/lambda)*L
net = gain - cost
carbon_balance <- tibble(sigma, N_min, L, gain, cost, net)
return(carbon_balance)
}
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
carbon_balance
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon))
N_min <- rep(10, length(lma))
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon))
# generate data
lma <- rep(seq(0,0.25, 0.01), 5)
?rep
N_min <- rep(c(0,5,10,15,20), each = length(lma))
N_min
# generate data
lma <- rep(seq(0,0.25, 0.01), 5)
lma
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
length(lma)
N_min <- rep(c(0,5,10,15,20), each = length(lma)/5)
N_min
lma
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon))
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon)) +
facet_wrap(vars(N_min))
N_min <- rep(c(1,5,10,15,20), each = length(lma)/5)
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon)) +
facet_wrap(vars(N_min))
# generate data
lma <- rep(seq(0,0.25, 0.001), 5)
N_min <- rep(c(1,5,10,15,20), each = length(lma)/5)
carbon_balance <- pmap_dfr(list(lma, N_min), cycle_carbon) %>%
pivot_longer(cols = gain:net, names_to = "carbon", values_to = "flux")
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon)) +
facet_wrap(vars(N_min))
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = L))
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = L))  +
facet_wrap(vars(N_min))
# viz
ggplot(carbon_balance) +
geom_line(aes(x = sigma, y = flux, color = carbon)) +
facet_wrap(vars(N_min))
